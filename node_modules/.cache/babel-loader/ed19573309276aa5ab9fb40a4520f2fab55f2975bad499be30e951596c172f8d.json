{"ast":null,"code":"var _jsxFileName = \"/home/lucas/projetos-turma-19b/frontend-call-opening/frontend-call-opening/src/pages/loginPages.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const navigation = useNavigate();\n  const [emailField, setEmailField] = useState('');\n  const [senhalField, setSenhaField] = useState('');\n  const handleSignClick = async () => {\n    if (emailField.trim() === '' || senhalField.trim() === '') {\n      alert('Preencha todos os campos!');\n      return;\n    }\n    try {\n      const response = await fetch('http://192.168.0.39:3010/login', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: emailField,\n          password: senhalField\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        await AsyncStorage.setItem('token', data.access_token);\n        navigation.reset({\n          routes: [{\n            name: 'MainTab'\n          }]\n        });\n        console.log(data);\n      } else {\n        const errorData = await response.json();\n        alert('Erro ao fazer login: ' + errorData.message);\n      }\n    } catch (error) {\n      alert('Erro ao conectar-se ao servidor.');\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-page-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"email\",\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"Digite seu email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"senha\",\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"Digite sua senha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"login-btn\",\n          children: \"LOGIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"create-btn\",\n          children: \"REGISTRAR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"UneO309kzxMG46Z0YnCDHwj6Q+o=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","AsyncStorage","jsxDEV","_jsxDEV","LoginPage","_s","navigation","emailField","setEmailField","senhalField","setSenhaField","handleSignClick","trim","alert","response","fetch","method","headers","Accept","body","JSON","stringify","email","password","ok","data","json","setItem","access_token","reset","routes","name","console","log","errorData","message","error","className","children","htmlFor","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/lucas/projetos-turma-19b/frontend-call-opening/frontend-call-opening/src/pages/loginPages.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport AsyncStorage from '@react-native-community/async-storage';\n\n\nfunction LoginPage() {\n \n    const navigation = useNavigate();\n    const [emailField, setEmailField] = useState('');\n    const [senhalField, setSenhaField] = useState('');\n\n\n    const handleSignClick = async () => {\n        if (emailField.trim() === '' || senhalField.trim() === '') {\n          alert('Preencha todos os campos!');\n          return;\n        }\n      \n        try {\n          const response = await fetch('http://192.168.0.39:3010/login', {\n            method: 'POST',\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              email: emailField,\n              password: senhalField,\n            }),\n          });\n      \n          if (response.ok) {\n            const data = await response.json();\n            await AsyncStorage.setItem('token', data.access_token);\n            navigation.reset({\n              routes:[{name: 'MainTab'}]\n            });\n            \n            console.log(data);\n          } else {\n            const errorData = await response.json();\n            alert('Erro ao fazer login: ' + errorData.message);\n          }\n        } catch (error) {\n          alert('Erro ao conectar-se ao servidor.');\n          console.error(error);\n        } \n      };\n\n  return (\n    <div className=\"login-page\">\n      <div className=\"login-page-body\">\n        <form className=\"login-form\">\n          <label htmlFor=\"email\">\n            <input\n              className=\"email\"\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Digite seu email\"\n            \n            />\n          </label>\n          <label htmlFor=\"password\">\n            <input\n              className=\"senha\"\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Digite sua senha\"\n              \n            />\n          </label>\n          <button\n            type=\"button\"\n            className=\"login-btn\"\n          >\n            LOGIN\n          </button>\n          <button\n            type=\"button\"\n            className=\"create-btn\"\n          >\n            REGISTRAR\n          </button>\n        </form>\n        <p\n        >\n         \n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default LoginPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}